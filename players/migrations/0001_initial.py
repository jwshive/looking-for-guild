# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-24 16:19
from __future__ import unicode_literals

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Characters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_name', models.CharField(max_length=255)),
                ('insert_date', models.DateField(auto_now_add=True)),
                ('character_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'characters',
                'managed': True,
                'verbose_name_plural': 'Characters',
            },
        ),
        migrations.CreateModel(
            name='CharactersDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_level', models.IntegerField(blank=True, null=True)),
                ('main_role', models.CharField(blank=True, choices=[('MELEE_DPS', 'Melee DPS'), ('RANGED_DPS', 'Ranged DPS'), ('TANK', 'Tank'), ('HEALER', 'Healer'), ('NO_ROLE_SELECTED', 'No Role Selected')], default='NO_ROLE_SELECTED', max_length=30, null=True)),
                ('alt_role', models.CharField(blank=True, choices=[('MELEE_DPS', 'Melee DPS'), ('RANGED_DPS', 'Ranged DPS'), ('TANK', 'Tank'), ('HEALER', 'Healer'), ('NO_ROLE_SELECTED', 'No Role Selected')], default='NO_ROLE_SELECTED', max_length=30, null=True)),
                ('looking_for_guild', models.BooleanField(default=False)),
                ('looking_for_guild_advertisement', models.TextField(blank=True, null=True)),
                ('character_armory_url_simple', models.URLField(blank=True, null=True)),
                ('character_armory_url_advanced', models.URLField(blank=True, null=True)),
                ('character_profile_image_url', models.CharField(blank=True, max_length=100, null=True)),
                ('character_profile_avatar_url', models.CharField(blank=True, max_length=100, null=True)),
                ('character_profile_inset_url', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'characters_details',
                'managed': True,
                'verbose_name_plural': 'Character Details',
            },
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=50)),
                ('blizzard_class_id', models.IntegerField()),
            ],
            options={
                'ordering': ['class_name'],
                'db_table': 'classes',
                'managed': True,
                'verbose_name_plural': 'Character Classes',
            },
        ),
        migrations.CreateModel(
            name='Factions',
            fields=[
                ('faction_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('faction_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'factions',
                'managed': True,
                'verbose_name_plural': 'Character Factions',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battle_net_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Races',
            fields=[
                ('race_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('race_name', models.CharField(max_length=50)),
                ('race_faction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Factions')),
            ],
            options={
                'db_table': 'races',
                'managed': True,
                'verbose_name_plural': 'Character Races',
            },
        ),
        migrations.CreateModel(
            name='Realms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realm_type', models.CharField(max_length=50)),
                ('realm_population', models.CharField(max_length=10)),
                ('realm_name', models.CharField(max_length=50)),
                ('realm_slug', autoslug.fields.AutoSlugField(editable=False, populate_from='realm_name')),
                ('realm_battlegroup', models.CharField(max_length=50)),
                ('realm_locale', models.CharField(max_length=50)),
                ('realm_timezone', models.CharField(max_length=255)),
                ('realm_connected_realms', models.TextField()),
                ('load_date', models.DateField()),
            ],
            options={
                'ordering': ['realm_name'],
                'db_table': 'realms',
                'managed': True,
                'verbose_name_plural': 'Realms',
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=3)),
            ],
            options={
                'ordering': ['region_name'],
                'db_table': 'regions',
                'managed': True,
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='Timezones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=10)),
                ('full_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'timezones',
                'managed': True,
                'verbose_name_plural': 'Timezone Listings',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='user_timezone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Timezones'),
        ),
        migrations.AddField(
            model_name='charactersdetails',
            name='character_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Classes'),
        ),
        migrations.AddField(
            model_name='charactersdetails',
            name='character_faction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Factions'),
        ),
        migrations.AddField(
            model_name='charactersdetails',
            name='character_link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Characters'),
        ),
        migrations.AddField(
            model_name='charactersdetails',
            name='character_race',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.Races'),
        ),
        migrations.AddField(
            model_name='characters',
            name='character_realm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.Realms'),
        ),
        migrations.AlterUniqueTogether(
            name='characters',
            unique_together=set([('character_owner', 'character_name', 'character_realm')]),
        ),
    ]
